{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/midovsky/Desktop/cv-nextjs/components/Header.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Background from './HeaderBackground';\nimport ProfileImage from './HeaderProfile';\nimport Brace from './HeaderBrace';\nimport Title from './HeaderTitle';\nimport Button from './HeaderButton';\nvar themes = {\n  light: {\n    background: '#f5f5f5',\n    font: '#4a4a4a'\n  },\n  dark: {\n    background: '#2f353f',\n    font: '#e4e4e4'\n  }\n};\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this);\n    _this.state = {\n      theme: 'light'\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggleTheme\",\n    value: function toggleTheme() {\n      var newtheme = this.state.theme === 'light' ? 'dark' : 'light';\n      this.setState({\n        theme: newtheme\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var theme = themes[this.state.theme];\n      console.log(this.props.aboutData);\n      console.log(this.props.experiencesData);\n      return __jsx(\"section\", {\n        className: \"hero is-fullheight has-text-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"hero-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"columns is-mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, __jsx(Brace, {\n        type: \"left\",\n        color: theme.font,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }), __jsx(ProfileImage, {\n        toggle: this.toggleTheme.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }), __jsx(Brace, {\n        type: \"right\",\n        color: theme.font,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, __jsx(Title, {\n        color: theme.font,\n        first_name: this.props.aboutData.first_name,\n        last_name: this.props.aboutData.last_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }))), __jsx(\"div\", {\n        className: \"columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, __jsx(Button, {\n        title: \"My GitHub\",\n        url: this.props.aboutData.github,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }), __jsx(Button, {\n        title: \"My LinkedIn\",\n        url: this.props.aboutData.linkedin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      })))), __jsx(Background, {\n        color: theme.background,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport { Header as default };","map":{"version":3,"sources":["/home/midovsky/Desktop/cv-nextjs/components/Header.js"],"names":["React","Background","ProfileImage","Brace","Title","Button","themes","light","background","font","dark","Header","state","theme","newtheme","setState","console","log","props","aboutData","experiencesData","toggleTheme","bind","first_name","last_name","github","linkedin","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Background from './HeaderBackground';\r\nimport ProfileImage from './HeaderProfile';\r\nimport Brace from './HeaderBrace'\r\nimport Title from './HeaderTitle'\r\nimport Button from './HeaderButton'\r\n\r\nconst themes = {\r\n    light: {\r\n        background: '#f5f5f5',\r\n        font: '#4a4a4a'\r\n    },\r\n    dark: {\r\n        background: '#2f353f',\r\n        font: '#e4e4e4'\r\n    }\r\n}\r\n\r\nexport default class Header extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            theme: 'light'\r\n        }\r\n    }\r\n\r\n    toggleTheme() {\r\n        let newtheme = this.state.theme === 'light' ? 'dark' : 'light'\r\n        this.setState({\r\n            theme: newtheme\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let theme = themes[this.state.theme];\r\n        console.log(this.props.aboutData)\r\n        console.log(this.props.experiencesData)\r\n\r\n        return (\r\n            <section className=\"hero is-fullheight has-text-centered\">\r\n                <div className=\"hero-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"columns is-mobile\">\r\n                            <Brace type=\"left\" color={theme.font}/>\r\n                            <ProfileImage toggle={this.toggleTheme.bind(this)} />\r\n                            <Brace type=\"right\" color={theme.font} />\r\n                        </div>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <Title  color={theme.font} first_name= {this.props.aboutData.first_name} last_name= {this.props.aboutData.last_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <Button title=\"My GitHub\" url={this.props.aboutData.github} />\r\n                                <Button title=\"My LinkedIn\" url={this.props.aboutData.linkedin} />                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Background color={theme.background}/>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}